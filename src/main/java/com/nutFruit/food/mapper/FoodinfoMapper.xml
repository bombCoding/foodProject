<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nutFruit.food.mapper.FoodInfoMapper" >
  <resultMap id="BaseResultMap" type="com.nutFruit.food.domain.FoodInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="food_name" property="foodName" jdbcType="VARCHAR" />
    <result column="recommended_price" property="recommendedPrice" jdbcType="DOUBLE" />
    <result column="flag" property="flag" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="VARCHAR" />
    <result column="update_user_id" property="updateUserId" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.nutFruit.food.domain.FoodInfo" extends="BaseResultMap" >
    <result column="food_desc" property="foodDesc" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, food_name, recommended_price, flag, create_time, update_time, create_user_id, 
    update_user_id
  </sql>
  <sql id="Blob_Column_List" >
    food_desc
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from food_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from food_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.nutFruit.food.domain.FoodInfo" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into food_info (food_name, recommended_price, flag, 
      create_time, update_time, create_user_id, 
      update_user_id, food_desc)
    values (#{foodName,jdbcType=VARCHAR}, #{recommendedPrice,jdbcType=DOUBLE}, #{flag,jdbcType=CHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=VARCHAR}, 
      #{updateUserId,jdbcType=VARCHAR}, #{foodDesc,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.nutFruit.food.domain.FoodInfo" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into food_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="foodName != null" >
        food_name,
      </if>
      <if test="recommendedPrice != null" >
        recommended_price,
      </if>
      <if test="flag != null" >
        flag,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="foodDesc != null" >
        food_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="foodName != null" >
        #{foodName,jdbcType=VARCHAR},
      </if>
      <if test="recommendedPrice != null" >
        #{recommendedPrice,jdbcType=DOUBLE},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="foodDesc != null" >
        #{foodDesc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.nutFruit.food.domain.FoodInfo" >
    update food_info
    <set >
      <if test="foodName != null" >
        food_name = #{foodName,jdbcType=VARCHAR},
      </if>
      <if test="recommendedPrice != null" >
        recommended_price = #{recommendedPrice,jdbcType=DOUBLE},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="foodDesc != null" >
        food_desc = #{foodDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.nutFruit.food.domain.FoodInfo" >
    update food_info
    set food_name = #{foodName,jdbcType=VARCHAR},
      recommended_price = #{recommendedPrice,jdbcType=DOUBLE},
      flag = #{flag,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      update_user_id = #{updateUserId,jdbcType=VARCHAR},
      food_desc = #{foodDesc,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nutFruit.food.domain.FoodInfo" >
    update food_info
    set food_name = #{foodName,jdbcType=VARCHAR},
      recommended_price = #{recommendedPrice,jdbcType=DOUBLE},
      flag = #{flag,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      update_user_id = #{updateUserId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <resultMap id="ResultMapWithPic" type="com.nutFruit.food.domain.FoodInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="food_name" property="foodName" jdbcType="VARCHAR" />
    <result column="recommended_price" property="recommendedPrice" jdbcType="DOUBLE" />
    <result column="flag" property="flag" jdbcType="CHAR" />
    <result column="flag_str" property="flagStr" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="VARCHAR" />
    <result column="update_user_id" property="updateUserId" jdbcType="VARCHAR" />
    <result column="food_desc" property="foodDesc" jdbcType="LONGVARCHAR" />
    <collection property="foodPics" column="id" fetchType="eager"
                 select="com.nutFruit.food.mapper.FoodPicMapper.selectByFoodId"/>
  </resultMap>


  <select id="selectAllInfo" resultMap="ResultMapWithPic" parameterType="map" >
    SELECT  i.id id, i.food_name, i.recommended_price, i.flag,
             CASE  flag  WHEN '1' THEN '上架' WHEN '2' THEN '下架' ELSE '删除' END  flag_str,
             i.create_time, i.update_time, i.create_user_id, i.update_user_id,i.food_desc
    FROM food_info i
    WHERE 1 = 1
    <if test="type != null and type == 1">
      AND flag = 1
    </if>
    <if test="type != null and type == 2">
      AND flag !=0
    </if>
    ORDER BY id DESC
    limit ${startIndex},${pageSize}
  </select>


  <select id="getAllCountNum" resultType="int"  >
    SELECT count(*)  FROM food_info i WHERE  flag !=0
  </select>
</mapper>