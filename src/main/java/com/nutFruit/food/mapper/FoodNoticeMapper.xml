<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nutFruit.food.mapper.FoodNoticeMapper" >
  <resultMap id="BaseResultMap" type="com.nutFruit.food.domain.FoodNotice" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="action_user" property="actionUser" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.nutFruit.food.domain.FoodNotice" extends="BaseResultMap" >
    <result column="notice_info" property="noticeInfo" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, title, status, action_user, create_time, update_time
  </sql>
  <sql id="Blob_Column_List" >
    notice_info
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from food_notice
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from food_notice
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.nutFruit.food.domain.FoodNotice" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into food_notice (title, status, action_user, 
      create_time, update_time, notice_info
      )
    values (#{title,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{actionUser,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{noticeInfo,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.nutFruit.food.domain.FoodNotice" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into food_notice
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="title != null" >
        title,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="actionUser != null" >
        action_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="noticeInfo != null" >
        notice_info,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="actionUser != null" >
        #{actionUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="noticeInfo != null" >
        #{noticeInfo,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.nutFruit.food.domain.FoodNotice" >
    update food_notice
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="actionUser != null" >
        action_user = #{actionUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="noticeInfo != null" >
        notice_info = #{noticeInfo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.nutFruit.food.domain.FoodNotice" >
    update food_notice
    set title = #{title,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      action_user = #{actionUser,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      notice_info = #{noticeInfo,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nutFruit.food.domain.FoodNotice" >
    update food_notice
    set title = #{title,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      action_user = #{actionUser,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectAll" resultMap="ResultMapWithBLOBs" parameterType="map" >
    SELECT
    <include refid="Base_Column_List" />,
    <include refid="Blob_Column_List" />
    FROM food_notice
    WHERE 1=1
    <if test="type != null and type == 1">
      AND status = 1
    </if>
    <if test="type != null and type == 2">
      AND status !=0
    </if>
    ORDER BY id DESC
    limit ${startIndex},${pageSize}
  </select>
  <select id="getAllCountNum" resultType="int"  >
    SELECT count(*)  FROM food_notice i WHERE  status !=0
  </select>

</mapper>